import React, { useState, useEffect } from 'react';
import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Paper } from '@mui/material';
import Order from './../../user/Order';
import socket from '../../../utils/socket';
import { number } from 'yup';

interface OrderFoodDetail {
  _id: string;
  orderDetail_Quantity: number;
  orderDetail_Cooking: string;
  orderDetail_More: string;
  orderDetail_Serving: string;
  food_Id: { food_Name: string };
  chef_Id: { chef_Name: string };
  employee_Id: { employee_Name: string };
  createdAt: string;
}

const OrderTable = () => {
  const [selectedOrder, setSelectedOrder] = useState<string | null>(null); // ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
  const [ordersfood, setOrderFood] = useState<OrderFoodDetail[]>([]);

  useEffect(() => {
    // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ socket ‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    socket.connect();
    // ‡∏Ç‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    if (socket.connected) {
      socket.emit('get_latest_order');
      console.log("==>Socket connected");
    } else {
      console.error("Socket is not connected!");
    }

    socket.emit('getOrderFoodDetails');

    socket.on('orderFoodDetails', (orderDetails) => {
      console.log('üì¶ Received order food details:', orderDetails);
      setOrderFood(orderDetails);
    });
  },[])
  const handleStartCooking = (orderId: string) => {
    console.log('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå:', orderId);
    // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏õ‡∏ó‡∏µ‡πà server
  };

  const handleConfirmOrder = (orderId: string) => {
    console.log('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå:', orderId);
    // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà server
  };



  return (
    <>
      <TableContainer component={Paper} sx={{ width: '75vw', height: '90vh' }}>
        <Table sx={{ minWidth: 650 }} aria-label="simple table">
          <TableHead>
            <TableRow>
              <TableCell>‡∏•‡∏≥‡∏î‡∏±‡∏ö</TableCell>
              <TableCell>‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</TableCell>
              <TableCell>‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£</TableCell>
              <TableCell>‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</TableCell>
              <TableCell>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</TableCell>
              <TableCell>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£</TableCell>
              <TableCell>‡πÄ‡∏ä‡∏ü‡∏ó‡∏µ‡πà‡∏ó‡∏≥</TableCell>
              <TableCell>‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå</TableCell>
              <TableCell>‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</TableCell>
              <TableCell>‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {ordersfood.map((order, index) => (
              <TableRow
                key={order._id}
                sx={{
                  '&:last-child td, &:last-child th': { border: 0 },
                  backgroundColor: selectedOrder === order._id ? '#f5f5f5' : '',
                }}
                onClick={() => setSelectedOrder(order._id)}
              >
                <TableCell>{index + 1}</TableCell>
                <TableCell>{order._id.substring(0, 6)}</TableCell>
                <TableCell>{order.food_Id.food_Name}</TableCell>
                <TableCell>{order.orderDetail_More}</TableCell>
                <TableCell>{order.orderDetail_Quantity}</TableCell>
                <TableCell>{order.orderDetail_Serving}</TableCell>
                <TableCell>{order.chef_Id?.chef_Name || "No Chef Assigned" }</TableCell>
                <TableCell>{}</TableCell>
                <TableCell>
                  <Button variant="outlined" onClick={() => handleStartCooking(order._id)}>
                    ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥
                  </Button>
                </TableCell>
                <TableCell>
                  <Button variant="contained" color="primary" onClick={() => handleConfirmOrder(order._id)}>
                    ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
                  </Button>
                </TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
    </>

  );
};

export default OrderTable;
